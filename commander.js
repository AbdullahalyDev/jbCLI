// Do Not edit this file



const readline = require("node:readline/promises");
const path = require("path");
const colors = require("colors")
const fs = require("fs");

const commandFunc = require("./utils/command");


console.log(
    `welcome to JSCLI ${require("./version.json").version} Application you can get full control on any json file
this application powered by `.green + `jsonbyte`.blue + ` npm package
`
        .green);

// Commander
const commander = async () => {

    
    const interface = readline.createInterface({
        input: process.stdin,
        output: process.stdout,
        terminal: true
    });

    const q = await interface.question(`> `);

    if (!q) {
        interface.close();
        await commander();
        return;
    };

    const qSplited = q.split(" ")
    const command = qSplited[0];
    const args = qSplited.slice(1);

    const module = await commandFunc(command)
    if (!module) {
        console.log(`${command} not found`.red)
        interface.close();
        await commander();
        return;
    };


    const modArgs = module.args;
    var finalArgs = new Object();

    for (let i = 0; i <= modArgs.length - 1; i++) {
        const key = modArgs[i].name;
        const value = args[i];

        if (!value && modArgs[i].required) {
            console.log(`${key} argument not found`.red);
            interface.close();
            await commander();
            break;
        }
        else {
            if (!value) return finalArgs[key] = modArgs[i].default;
            finalArgs[key] = value
        }
    }


    try {
        await module.run(finalArgs, args);
    }
    catch (err) {
        console.log(`${err}`.red)
    }


    interface.close();
    await commander();

    return;
};



module.exports = commander;